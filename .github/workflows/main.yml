name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: ./gradlew build

      - name: set env
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DB_ENDPOINT }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          jwt.token.secretKey: ${{ secrets.JWT_KEY }}
          authority.id.admin: ${{ secrets.ADMIN }}

      - name: Docker Build
        run: |
          docker login -u newbee9507 -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t portfolio .
          docker tag portfolio newbee9507/portfolio:${GITHUB_SHA::7}
          docker push newbee9507/portfolio:${GITHUB_SHA::7}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Start Session Manager session
        run: aws ssm start-session --target i-0f2195f7c4d0965cc

      - name: Deploy to Server
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-2
        run: |
          aws ssm send-command \
            --instance-ids i-0f2195f7c4d0965cc \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=[
            'if sudo docker ps -a --format \\'{{.Names}}\\' | grep -q \'^server$\\'; then',
            '  sudo docker stop server',
            '  sudo docker rm server',
            'fi',
            'sudo docker pull newbee9507/portfolio:${GITHUB_SHA::7}',
            'sudo docker tag newbee9507/portfolio:${GITHUB_SHA::7} portfolio',
            'sudo docker run -d --name server -p 8080:8080 portfolio'
            ]" \
            --output text
